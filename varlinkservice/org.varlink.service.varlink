# The Varlink Service Interface is provided by every varlink service. It
# describes the service and the interfaces it implements.
interface org.varlink.service

# Get a list of all the interfaces a service provides and information
# about the implementation.
method GetInfo() -> (
  vendor: string,
  product: string,
  version: string,
  url: string,
  interfaces: []string
)

# Get the description of an interface that is implemented by this service.
method GetInterfaceDescription(interface: string) -> (description: string)

# The requested interface was not found.
error InterfaceNotFound (interface: string)

# The requested method was not found
error MethodNotFound (method: string)

# The interface defines the requested method, but the service does not
# implement it.
error MethodNotImplemented (method: string)

# One of the passed parameters is invalid.
error InvalidParameter (parameter: string)

# Client is denied access
error PermissionDenied ()

# Method is expected to be called with 'more' set to true, but wasn't
error ExpectedMore ()

# New interface definition for topology and traffic matrix operations
interface org.example

# Reads the topology file and returns the graph
method readTopology() -> (graph Graph)

# Reads the traffic matrix file and returns the matrix
method readTrafficMatrix() -> (matrix TrafficMatrix)

# Computes the link loads based on the graph and traffic matrix
method computeLinkLoads(graph: Graph, matrix: TrafficMatrix) -> (loads: []Load)

# Optimizes the link weights based on the graph and traffic matrix
method optimizeLinkWeights(graph: Graph, matrix: TrafficMatrix) -> (loads: []Load)

type Graph (
  nodes: int
  edges: []Edge
)

type Edge (
  from: int
  to: int
  weight: float
)

type TrafficMatrix [][]float

type Load (
  edge: Edge
  load: float
)
